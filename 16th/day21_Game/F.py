# # n = int(input())

# # custom_order = [7, 3, 1, 6, 5, 2, 10, 9, 4, 8]
# custom_order = [3, 1, 2]


# def sum_binList(l):
#     return int("".join([str(bin(x)).replace("0b","") for x in [num for num in l if num <= len(l)]]),2)

# # for new_element in range(4,32):
# #     for i in range(len(custom_order) + 1):
# #         inserted = custom_order[:i] + [new_element] + custom_order[i:]
# #         print(inserted)
# #         # if sum_binList(inserted) > sum_binList(custom_order):
# #         #     max_inserted = inserted
# #     # custom_order = max_inserted
# #     custom_order = inserted




# # print(" ".join([str(bin(x)).replace("0b","") for x in [num for num in custom_order if num <= n]]))
# # print(sum_binList(custom_order))



# custom_order = [3, 1, 2]  # 初始列表（根据你的示例推测）

# for new_element in range(4, 500):
#     max_value = -float('inf')
#     best_list = None
    
#     # 遍历所有可能的插入位置
#     for i in range(len(custom_order) + 1):
#         inserted = custom_order[:i] + [new_element] + custom_order[i:]
#         current_value = sum_binList(inserted)
        
#         # 比较并更新最大值和最佳列表
#         if current_value > max_value:
#             max_value = current_value
#             best_list = inserted
    
#     # 将当前最佳列表作为下一轮的基础
#     if best_list is not None:
#         custom_order = best_list.copy()  # 避免引用问题
    
#     # print(f"插入 {new_element} 后的最佳列表:", custom_order)

# print(custom_order)



res = [255, 127, 63, 31, 15, 7, 3, 1, 254, 253, 126, 252, 251, 125, 62, 250, 499, 249, 124, 498, 497, 248, 496, 495, 247, 123, 61, 30, 494, 493, 246, 492, 491, 245, 122, 490, 489, 244, 488, 487, 243, 121, 60, 486, 485, 242, 484, 483, 241, 120, 482, 481, 240, 480, 479, 239, 119, 59, 29, 478, 477, 238, 14, 476, 475, 237, 118, 474, 473, 236, 472, 471, 235, 117, 58, 470, 469, 234, 468, 467, 233, 116, 466, 465, 232, 464, 463, 231, 115, 57, 462, 28, 461, 230, 460, 459, 229, 114, 458, 457, 228, 456, 455, 227, 113, 56, 454, 453, 226, 452, 451, 225, 112, 450, 449, 224, 448, 447, 223, 111, 55, 446, 27, 445, 222, 444, 443, 221, 13, 110, 442, 441, 220, 440, 439, 219, 109, 438, 54, 6, 437, 218, 436, 435, 217, 108, 434, 433, 216, 432, 431, 215, 107, 430, 53, 429, 214, 26, 428, 427, 213, 106, 426, 425, 212, 424, 423, 211, 105, 422, 52, 421, 210, 420, 419, 209, 104, 418, 417, 208, 416, 415, 207, 103, 414, 51, 413, 206, 25, 412, 411, 205, 102, 410, 409, 204, 12, 408, 407, 203, 101, 406, 50, 405, 202, 404, 403, 201, 100, 402, 401, 200, 400, 399, 199, 99, 398, 49, 397, 198, 396, 24, 395, 197, 98, 394, 393, 196, 392, 391, 195, 97, 390, 48, 389, 194, 388, 387, 193, 96, 386, 385, 192, 384, 383, 191, 95, 382, 47, 381, 190, 380, 23, 379, 189, 94, 378, 377, 188, 376, 375, 187, 11, 93, 374, 46, 373, 186, 372, 371, 185, 92, 370, 369, 184, 368, 367, 183, 91, 366, 365, 45, 5, 182, 364, 363, 181, 22, 90, 362, 361, 180, 360, 359, 179, 89, 358, 357, 44, 178, 356, 355, 177, 88, 354, 353, 176, 352, 351, 175, 87, 350, 349, 43, 174, 348, 347, 173, 21, 86, 346, 345, 172, 344, 343, 171, 85, 342, 341, 170, 42, 10, 2, 340, 339, 169, 338, 84, 337, 168, 336, 335, 167, 334, 83, 333, 166, 41, 332, 331, 165, 330, 82, 20, 329, 164, 328, 327, 163, 326, 81, 325, 162, 40, 324, 323, 161, 322, 80, 321, 160, 320, 319, 159, 318, 79, 317, 158, 39, 316, 315, 157, 314, 78, 19, 313, 156, 312, 311, 155, 310, 77, 309, 154, 38, 308, 307, 153, 9, 306, 76, 305, 152, 304, 303, 151, 302, 75, 301, 150, 37, 300, 299, 149, 298, 74, 297, 18, 148, 296, 295, 147, 294, 73, 293, 146, 292, 36, 4, 291, 145, 290, 72, 289, 144, 288, 287, 143, 286, 71, 285, 142, 284, 35, 283, 141, 282, 70, 281, 140, 17, 280, 279, 139, 278, 69, 277, 138, 276, 34, 275, 137, 274, 68, 273, 136, 8, 272, 271, 135, 270, 67, 269, 134, 268, 33, 267, 133, 266, 66, 265, 132, 264, 16, 263, 131, 262, 65, 261, 130, 260, 32, 259, 129, 258, 64, 257, 128, 256]

n = int(input())

print(int("".join([str(bin(i)).replace("0b","") for i in res if i <= n]),2))
# print(" ".join([str(bin(i)).replace("0b","") for i in res if i <= n]))
        