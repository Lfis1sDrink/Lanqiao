# def an(n):
#   ans = 0
#   for i in range(1,n+1):
#     ans += i
#   return ans

# def bn(n):
#   ans = 1
#   for i in range(2,n+1):
#     ans = ans*i
#   return ans

# ans = 0
# for i in range(1,2024041331404202):
#   if (an(i) - bn(i)) % 100 == 0:
#     #能被100整除可以等价为最少是3位数，并且末尾两位是00
#     ans += 1

# print(ans)

#思路2
#反着来，找末尾是00的阶乘结果，同时它还<2024041331404202, 因为挨个遍历太费时间，而乘的话很快的
#思路2错误的
# f = 1
# i = 1
# f_res = []
# while f<2024041331404202:
#     i += 1
#     f = f*i
#     f_res.append(i)
#     f_res.append(f)

# print(f_res)
[10, 3628800, 11, 39916800, 
 12, 479001600, 13, 6227020800, 
 14, 87178291200, 15, 1307674368000, 
 16, 20922789888000, 17, 355687428096000, 
 18, 6402373705728000]

#以下这些运算也是没必要的
# s = 1
# j = 1
# s_res = []
# while s<2024041331404202:
#     j += 1
#     s = s+j
#     if s % 100 == 0:
#       s_res.append(f)
# print(s_res)
# 只要考察10, 11, 12, 13, 14, 15, 16, 17这几个数谁的前缀和末尾两位是00即可
# p = [i+1 for i in range(18)]
# print(p)
# for i in range(1,18):
#   p[i] += p[i-1]


# 结果：
# f_res = [10, 3628800, 11, 39916800, 12, 479001600, 13, 6227020800, 14, 87178291200, 15, 1307674368000, 16, 20922789888000, 17, 355687428096000, 18, 6402373705728000]
# p = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]
# p_sum = [1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 66, 78, 91, 105, 120, 136, 153, 171]
# 可见，只有15的前缀和是120，


# 思路3
# 只找18以内的阶乘与前缀和满足条件的数

# 1-18前缀和
# p = [i+1 for i in range(18)]
# for i in range(1,18):
#   p[i] += p[i-1]
# print(p)

# # 1-18阶乘
# f = 1
# i = 1
# f_res = []
# while f<2024041331404202:
#     i += 1
#     f = f*i
#     # f_res.append(p[i-1])
#     f_res.append(f)

# print(f_res)





# 思路4
# 一直计算阶乘和前缀和，在中间结果处对100取余，最后遍历整个数组，找出对应项相减结果为0的次数
# 遇到这么大的数，一定不能暴力枚举，先输出1000以内的数看看规律
# 1-18阶乘
# f = 1
# i = 1
# s = 1
# p_res = [1]
# f_res = [1]
# ans = [1]
# while i<1000:
#     i += 1
#     s = (s+i) % 100
#     f = (f*i) % 100
#     # f_res.append(p[i-1])
#     f_res.append(f)
#     p_res.append(s)
#     if f_res[i-1] - p_res[i-1] == 0:
#       ans.append(i)

# print(ans)
# ans = [1, 3, 24, 175, 199, 200, 224, 375, 399, 400, 424, 575, 599, 600, 624, 775, 799, 800, 824, 975, 999, 1000]
# 发现规律！每200以内有4个结果，结尾两个数字以 24, 75, 99, 00这样的顺序重复出现！
# 所以只要算出2024041331404202里面有多少个200, 然后再加上1和3两个特殊的答案即可了

i = 2024041331404202//200
print(i*4+2)




#######################################################

# 4月6日再做一遍

i = 1
ans = []
bn = 1
while i <= 1000:
    an = (i*(i+1)//2) % 100
    bn = (bn*i) % 100
    if an - bn == 0:
        ans.append(i)
    i += 1

print(ans)