n = int(input())
a = list(map(int, input().split()))
b = a[::-1]
diff = [0]*n
ans = 0

if n == 1:
  print(0)

for i in range(n//2):
  diff[i] = b[i] - a[i]

for i in range(n//2+1):
  if diff[i]*diff[i+1] > 0:
    ans += min(abs(diff[i]), abs(diff[i+1]))
    if diff[i] > 0 and diff[i] < diff[i+1]:#全是正数
        diff[i+1] -= diff[i]
        diff[i] = 0
    elif diff[i] > 0 and diff[i] > diff[i+1]:
        diff[i] -= diff[i+1]
        diff[i+1] = 0
    elif diff[i] < 0 and diff[i] < diff[i+1]:#全是负数
        diff[i] += abs(diff[i+1])
        diff[i+1] = 0
    elif diff[i] < 0 and diff[i] > diff[i+1]:#全是负数
        diff[i+1] += abs(diff[i])
        diff[i] = 0


for i in range(n//2):
  if diff[i] != 0:
    ans += abs(diff[i])

print(ans)
# diff列表是 逆转后的列表-原列表 值为正数说明原数组进行+操作，值为负数说明原数组要进行-操作
# 比如对于 diff= [-40, 41, 399, 0, 0, 0]
# Plan 0
# [-40, 41, 399, 0, 0, 0] = 480
# Plan A
# [-40, 41, 399, 0, 0, 0] 
# [ 0, 41, 399, 0, 0, 0] +40
# [ 0, 0, 358, 0, 0, 0] +40+41
# [ 0, 0, 0, 0, 0, 0] +40+41+358 = 439
# Plan B
# [-40, 41, 399, 0, 0, 0] 
# [ 0, 81, 399, 0, 0, 0] +40
# [ 0, 0, 318, 0, 0, 0] +40+81
# [ 0, 0, 0, 0, 0, 0] +40+81+318 = 439
# 思路：遍历diff列表，
# 1.在相邻的3项中选出最优的2项处理的同号的项，操作次数以小的为准
# 2.再处理单个的项目






# print(a)
# print(b)
# print(diff)
# 1 2 3 4 5 6 7 8 9 10
# 1 2 3 5 6 6 7 8 9 10
# 1 2 4 6 6 6 7 8 9 10
# 1 2 5 7 6 6 7 8 9 10
# 1 3 6 7 6 6 7 8 9 10
# 1 4 7 7 6 6 7 8 9 10
# 1 5 8 7 6 6 7 8 9 10
# 2 6 8 7 6 6 7 8 9 10
# 3 7 8 7 6 6 7 8 9 10
# 4 8 8 7 6 6 7 8 9 10
# 5 9 8 7 6 6 7 8 9 10
# 6 9 8 7 6 6 7 8 9 10
# 7 9 8 7 6 6 7 8 9 10
# 8 9 8 7 6 6 7 8 9 10
# 9 9 8 7 6 6 7 8 9 10
# 10 9 8 7 6 6 7 8 9 10


# 1 49 8 3 45 88 9
# 9 88 45
# 1 49 8 +39
# 1 88 47 
# 1 88 45 -2
# 9 88 45 +7
# 723733, 207358, 911805, 628400, 71346, 104266, 549962,
# 516375, 0, 76047, 0, 0, 32920, 549962,


