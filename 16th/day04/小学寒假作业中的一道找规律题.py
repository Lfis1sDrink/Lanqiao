""""
在妹妹寒假作业上看到一道找规律题，感觉能用代码实现，还挺有意思的：

形如下面的数字，找规律，问第几行第几个是几。
规律：每行的第一个数字是上一行的第一个数字加上上一行的数字数量，
分别是1,3,5,7,9,11,13,15,17,...., 写代码可以很快算出500000行以内的对应位置数字

1
2 3 4
5 6 7 8 9
10 11 12 13 14 15 16
17 18 19 20 21 22 23 24 25
26 27 28 29 30 31 32 33 34 35 36
37 38 39 40 41 42 43 44 45 46 47 48 49
50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81
82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100
"""

while True:
    n,m = map(int, input().split())
    first_num = 1
    row = 1
    ans = [1]

    #最终ans列表的大小是500001，因此最多计算到500002行的数字，
    #但无法判断最后一行的数字是否合法，因此规定只能算500000行的数字
    for i in range(1,1000000,2):
        first_num += i
        ans.append(first_num)

    if 500000 < n:
        print("我算不出来 ^-^")
    else:
        res = ans[n-1]+m-1

    if res >= ans[n] or n <= 0 or m <= 0 :
        print("不存在这个数字！")
    else:
        print(f"第{n}行的第{m}个数字是{res}")


    index = 0
    for i in range(1,ans[n]):
        if i == ans[index]:
            print()
            index +=1
        print(i,end=' ')